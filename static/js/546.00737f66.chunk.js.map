{"version":3,"file":"static/js/546.00737f66.chunk.js","mappings":"sKACA,MAAwB,qB,SCCT,SAASA,IACpB,OAAO,eAAIC,UAAWC,EAAf,qD,oDCFX,MAAwB,qB,SCCT,SAASC,EAAT,GAA2B,IAAVC,EAAS,EAATA,MAC5B,OAAO,eAAIH,UAAWC,EAAf,SAAyBE,M,6ICFpC,GAAgB,UAAY,gCAAgC,IAAM,0BAA0B,KAAO,2BAA2B,WAAa,iCAAiC,OAAS,6BAA6B,MAAQ,4BAA4B,MAAQ,4BAA4B,SAAW,+BAA+B,SAAW,gC,SCKhU,SAASC,EAAT,GAAsC,IAAdC,EAAa,EAAbA,UAC3BC,GAAUC,EAAAA,EAAAA,MAAVD,MACR,GAA0CE,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,MAEAC,EAAAA,EAAAA,YAAU,WACQ,OAAVL,GAIJI,EAAiBJ,EAAMM,QACxB,CAACN,IAEJ,IAAQH,EAA6DE,EAA7DF,MAAOU,EAAsDR,EAAtDQ,aAAcC,EAAwCT,EAAxCS,aAAcC,EAA0BV,EAA1BU,SAAUC,EAAgBX,EAAhBW,YAC/CC,EAASD,EACT,kCAAoCA,EACpC,6DACAE,EAAOL,EAAaM,MAAM,EAAG,GAC7BC,EAASf,EAAUe,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,MAE9D,OACI,+BACI,iBAAKxB,UAAWC,EAAAA,UAAhB,WACI,SAAC,KAAD,CAASwB,GAAIhB,GAAgC,IAAKT,UAAWC,EAAAA,IAA7D,uBAIA,iBAAKD,UAAWC,EAAAA,KAAhB,WACI,gBAAKD,UAAWC,EAAAA,WAAhB,UACI,gBAAKD,UAAWC,EAAAA,OAAUyB,IAAKT,EAAQU,IAAKxB,OAEhD,4BACI,gBAAIH,UAAWC,EAAAA,MAAf,UACKE,EADL,KACce,EADd,QAGA,eAAIlB,UAAWC,EAAAA,SAAf,0BACA,eAAGD,UAAWC,EAAAA,MAAd,cAAyBa,EAAzB,UACA,eAAId,UAAWC,EAAAA,SAAf,yBACA,cAAGD,UAAWC,EAAAA,SAAd,SAA2Bc,KAC3B,eAAIf,UAAWC,EAAAA,SAAf,uBACA,cAAGD,UAAWC,EAAAA,OAAd,SAAyBmB,eC5CjD,MAAuB,+BAAvB,EAAkE,oCAAlE,EAA6G,+BAA7G,EAAmJ,+BCQpI,SAASQ,IACpB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BrB,EAAAA,EAAAA,UAAS,MAAnC,eAAOuB,EAAP,KAAcC,EAAd,KACA,GAA8BxB,EAAAA,EAAAA,WAAS,GAAvC,eAAOyB,EAAP,KAAgBC,EAAhB,KACA,GAA0B1B,EAAAA,EAAAA,WAAS,GAAnC,eAAO2B,EAAP,KAAcC,EAAd,KAiBA,OAfAzB,EAAAA,EAAAA,YAAU,WACNuB,GAAW,GACXE,GAAS,IAETC,EAAAA,EAAAA,IAAeR,GACVS,MAAK,SAAAC,GACFP,EAASO,GACTL,GAAW,MAEdM,OAAM,SAAAL,GACHC,GAAS,GACTF,GAAW,QAEpB,CAACL,KAGA,6BACI,SAAC3B,EAAA,EAAD,CAAOC,MAAO,iBAEb8B,IAAW,SAACQ,EAAA,EAAD,IACXN,IAAS,SAACpC,EAAA,EAAD,IAETgC,IAAS,SAAC3B,EAAD,CAAcC,UAAW0B,KAEjCI,IACE,iBAAKnC,UAAWC,EAAhB,WACI,cAAGD,UAAWC,EAAd,sCACA,gBAAID,UAAWC,EAAf,WACI,eAAID,UAAWC,EAAf,UACI,SAAC,KAAD,CAASwB,GAAG,OAAZ,qBAEJ,eAAIzB,UAAWC,EAAf,UACI,SAAC,KAAD,CAASwB,GAAG,UAAZ,6BAMdU,IAAS,SAAC,KAAD","sources":["webpack://goit-react-hw-05-movies/./src/components/Error/Error.module.css?141d","components/Error/Error.js","webpack://goit-react-hw-05-movies/./src/components/Title/Title.module.css?a947","components/Title/Title.js","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Error_title__WNFwj\"};","import s from './Error.module.css';\n\nexport default function Error() {\n    return <h2 className={s.title}>ERROR. Ooops... something went wrong!</h2>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__mrNq5\"};","import s from './Title.module.css';\n\nexport default function Title({ title }) {\n    return <h1 className={s.title}>{title}</h1>;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movieWrap\":\"MovieDetails_movieWrap__1WUKq\",\"btn\":\"MovieDetails_btn__tCU2l\",\"card\":\"MovieDetails_card__KL1V6\",\"posterWrap\":\"MovieDetails_posterWrap__o3uaF\",\"poster\":\"MovieDetails_poster__Gw9Qy\",\"title\":\"MovieDetails_title__RBndM\",\"score\":\"MovieDetails_score__67zDg\",\"overview\":\"MovieDetails_overview__EVogb\",\"subtitle\":\"MovieDetails_subtitle__8i-fx\"};","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nimport s from './MovieDetails.module.css';\n\nexport default function MovieDetails({ movieData }) {\n    const { state } = useLocation();\n    const [lastStateFrom, setLastStateFrom] = useState(null);\n\n    useEffect(() => {\n        if (state === null) {\n            return;\n        }\n\n        setLastStateFrom(state.from);\n    }, [state]);\n\n    const { title, release_date, vote_average, overview, poster_path } = movieData;\n    const poster = poster_path\n        ? 'https://image.tmdb.org/t/p/w500' + poster_path\n        : 'https://www.reelviews.net/resources/img/default_poster.jpg';\n    const date = release_date.slice(0, 4);\n    const genres = movieData.genres.map(genre => genre.name).join(', ');\n\n    return (\n        <>\n            <div className={s.movieWrap}>\n                <NavLink to={lastStateFrom ? lastStateFrom : '/'} className={s.btn}>\n                    Go back!\n                </NavLink>\n\n                <div className={s.card}>\n                    <div className={s.posterWrap}>\n                        <img className={s.poster} src={poster} alt={title} />\n                    </div>\n                    <div>\n                        <h2 className={s.title}>\n                            {title} ({date})\n                        </h2>\n                        <h4 className={s.subtitle}>User Score:</h4>\n                        <p className={s.score}> {vote_average}/10</p>\n                        <h4 className={s.subtitle}>Overview: </h4>\n                        <p className={s.overview}>{overview}</p>\n                        <h4 className={s.subtitle}>Genres: </h4>\n                        <p className={s.genres}>{genres}</p>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nMovieDetails.propTypes = {\n    movieData: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        release_date: PropTypes.string.isRequired,\n        vote_average: PropTypes.number.isRequired,\n        overview: PropTypes.string.isRequired,\n        poster_path: PropTypes.string.isRequired,\n    }),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"info\":\"MovieDetailsPage_info__wQ8PP\",\"infoTitle\":\"MovieDetailsPage_infoTitle__KCuyM\",\"link\":\"MovieDetailsPage_link__rhdjc\",\"list\":\"MovieDetailsPage_list__xeLC8\"};","import { useEffect, useState } from 'react';\nimport { useParams, Outlet, NavLink } from 'react-router-dom';\nimport { getMovieDetail } from '../../services/apiService';\nimport Loader from '../../components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport Title from 'components/Title/Title';\nimport MovieDetails from '../../components/MovieDetails/MovieDetails';\nimport s from './MovieDetailsPage.module.css';\n\nexport default function MovieDetailsPage() {\n    const { id } = useParams();\n    const [movie, setMovie] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n        setError(false);\n\n        getMovieDetail(id)\n            .then(res => {\n                setMovie(res);\n                setLoading(false);\n            })\n            .catch(error => {\n                setError(true);\n                setLoading(false);\n            });\n    }, [id]);\n\n    return (\n        <main>\n            <Title title={'Film Details'}></Title>\n\n            {loading && <Loader />}\n            {error && <Error />}\n\n            {movie && <MovieDetails movieData={movie} />}\n\n            {!error && (\n                <div className={s.info}>\n                    <p className={s.infoTitle}>Additional information:</p>\n                    <ul className={s.list}>\n                        <li className={s.link}>\n                            <NavLink to=\"cast\">Cast</NavLink>\n                        </li>\n                        <li className={s.link}>\n                            <NavLink to=\"reviews\">Review</NavLink>\n                        </li>\n                    </ul>\n                </div>\n            )}\n\n            {!error && <Outlet />}\n        </main>\n    );\n}\n"],"names":["Error","className","s","Title","title","MovieDetails","movieData","state","useLocation","useState","lastStateFrom","setLastStateFrom","useEffect","from","release_date","vote_average","overview","poster_path","poster","date","slice","genres","map","genre","name","join","to","src","alt","MovieDetailsPage","id","useParams","movie","setMovie","loading","setLoading","error","setError","getMovieDetail","then","res","catch","Loader"],"sourceRoot":""}